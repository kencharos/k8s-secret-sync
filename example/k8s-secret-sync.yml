---
#sa
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-secret-sync-sa
  namespace: default
---
## k8s RBAC for manage secret reesouce
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: secret-manager
  namespace: default 
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "create", "update"]
--- 
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: secret-manager-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: secret-manager
subjects:
- apiGroup: ""
  kind: ServiceAccount
  name: k8s-secret-sync-sa
  namespace: default
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: k8s-secret-sync-configmap
  namespace: default
data:
  config.yaml: |
    defaultWatchIntervalSeconds: 60
    watch:
      - name: sample-secret
        namespace: default
        type: Opaque
        secretPath: /vault/secrets/sample-secret.yml
      - name: ingress-tls-certs
        namespace: default
        type: kubernetes.io/tls
        watchIntervalSeconds: 16
        secretPath: /vault/secrets/ingress-tls-certs.yml
      - name: docker-cred
        namespace: default
        type: kubernetes.io/dockerconfigjson
        secretPath: /vault/secrets/docker-cred.yml
---
#deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-secret-sync
  namespace: default
  labels:
    app: k8s-secret-sync
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-secret-sync
  template:
    metadata:
      labels:
        app: k8s-secret-sync
      annotations:
        # vault agent config. 
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-init-first: "true"
        vault.hashicorp.com/role: 'k8s-secret-sync'
        ## opaque template
        # vault.hashicorp.com/agent-inject-file-sample-secret.yml: /if-you-want-to-change-path-of-secret #default is /vault/secrets
        vault.hashicorp.com/agent-inject-secret-sample-secret.yml: 'secret/data/opaque_sample'
        vault.hashicorp.com/agent-inject-template-sample-secret.yml: |
          {{- with secret "secret/data/opaque_sample" -}}
          sample1: {{ .Data.data.sample1 }}
          secret1: {{ .Data.data.secret2 }}
          {{- end }}
        ## tls
        vault.hashicorp.com/agent-inject-secret-ingress-tls-certs.yml: 'secret/data/tls_sample'
        vault.hashicorp.com/agent-inject-template-ingress-tls-certs.yml: |
          {{- with secret "secret/data/tls_sample"}}
          tls.key: |
          {{ .Data.data.key | indent 2 }}
          tls.crt: |
          {{ .Data.data.cert | indent 2}}
          {{- end }}       
        ## docker-cred
        vault.hashicorp.com/agent-inject-secret-docker-cred.yml: 'secret/data/docker_cred_sample'
        vault.hashicorp.com/agent-inject-template-docker-cred.yml: |
          {{- with secret "secret/data/docker_cred_sample" -}}
          docker-server: {{ .Data.data.docker_host }}
          docker-username: {{ .Data.data.docker_username }}
          docker-password: {{ .Data.data.docker_password }}
          {{- end }}       
    spec:
      containers:
      - name: k8s-secret-sync
        image: kencharos/k8s-secret-sync:0.1.0
        env:
        - name: LOG_LEVEL
          value: "debug"
        volumeMounts:
        - name: k8s-secret-sync-config
          mountPath: "/opt/k8s-secret-sync"
          readOnly: true
      serviceAccountName: k8s-secret-sync-sa
      volumes:
        - name: k8s-secret-sync-config
          configMap:
            name: k8s-secret-sync-configmap
            items:
            - key: "config.yaml"
              path: "config.yaml"